{Unit Test Method}
Function __Test_cJSONDictionary Global Returns Boolean
    Handle hLevel1 hLevel2 hLevel3
    String[] sa
    Number[] da
    String sJSON
    Showln "Testing cJSONDictionary..."
    
    //Simple serializing check
    Get Create U_cJSONDictionary to hLevel1
    Set Value of hLevel1 "cJSONDictionary" to "level1"
    Get Serialize of hLevel1 to sJSON
    If (sJSON <> '{"cJSONDictionary":"level1"}') Begin
        Showln "Simple serializing check failed"
        Function_Return False
    End
    Send Destroy of hLevel1
    
    //Simple nesting check
    Get Create U_cJSONDictionary to hLevel1
    Set Value of hLevel1 "cJSONDictionary" to "level1"
    Get Create U_cJSONDictionary to hLevel2
    Set Value of hLevel2 "cJSONDictionary" to "level2"
    Set Value of hLevel1 "NextLevel" to hLevel2
    Get Create U_cJSONDictionary to hLevel3
    Set Value of hLevel3 "cJSONDictionary" to "level3"
    Set Value of hLevel2 "NextLevel" to hLevel3
    Get Serialize of hLevel1 to sJSON
    If (sJSON <> '{"cJSONDictionary":"level1","NextLevel":{"cJSONDictionary":"level2","NextLevel":{"cJSONDictionary":"level3"}}}') Begin
        Showln "Simple nesting check failed"
        Function_Return False
    End
    Send Destroy of hLevel1
    Send Destroy of hLevel2
    Send Destroy of hLevel3

    //String array check
    Move "A" to sa[0]
    Move "B" to sa[1]
    Move "C" to sa[2]
    Get Create U_cJSONDictionary to hLevel1
    Set Value of hLevel1 "cJSONDictionary" to "level1"
    Set Value of hLevel1 "StringArray" to sa
    Get Serialize of hLevel1 to sJSON
    If (sJSON <> '{"cJSONDictionary":"level1","StringArray":["A","B","C"]}') Begin
        Showln "String array check failed"
        Function_Return False
    End
    Send Destroy of hLevel1

    //Decimal array check
    Move 535.44 to da[0]
    Move 22.3 to da[1]
    Move 34.234 to da[2]
    Get Create U_cJSONDictionary to hLevel1
    Set Value of hLevel1 "cJSONDictionary" to "level1"
    Set Value of hLevel1 "DecimalArray" to da
    Get Serialize of hLevel1 to sJSON
    If (sJSON <> '{"cJSONDictionary":"level1","DecimalArray":[535.44,22.3,34.234]}') Begin
        Showln "Decimal array check failed"
        Function_Return False
    End
    Send Destroy of hLevel1
    
    // Helper functions for typing values
    Object hJson is a cJSONDictionary
    End_Object
    
    String sHelper
    Set StringValue of hJson "string" to "my-string-value"
    Get StringValue of hJson "string" to sHelper
    If (sHelper <> "my-string-value") Begin
        Showln "StringValue check failed"
        Function_Return False
    End
    
    Number nHelper
    Set NumericValue of hJson "number" to 123.45
    Get NumericValue of hJson "number" to nHelper
    If (nHelper <> 123.45) Begin
        Showln "NumericValue check failed"
        Function_Return False
    End
    
    Boolean bHelper
    Set BooleanValue of hJson "boolean" to True
    Get BooleanValue of hJson "boolean" to bHelper
    If (bHelper <> True) Begin
        Showln "BooleanValue check failed"
        Function_Return False
    End
    
    String[] saHelper
    Set ArrayValue of hJson "array" to (CreateStringArray("A", "B", "C"))
    Get ArrayValue of hJson "array" to saHelper
    If (saHelper[2] <> "C") Begin
        Showln "ArrayValue check failed"
        Function_Return False
    End
    
    Handle hHelper
    Object oHelperJson is a cJSONDictionary
        Set Value "member" to "ABC"
    End_Object
    Set ObjectValue of hJson "object" to (oHelperJson)
    Get ObjectValue of hJson "object" to hHelper
    Get Value of hHelper "member" to sHelper
    If (sHelper <> "ABC") Begin
        Showln "ObjectValue check failed"
        Function_Return False
    End

    Handle[] haHelper haInput
    Object hInput1 is a cJSONDictionary
        Set Value "me" to "input-1"
    End_Object
    Object hInput2 is a cJSONDictionary
        Set Value "me" to "input-2"
    End_Object
    Object hInput3 is a cJSONDictionary
        Set Value "me" to "input-3"
    End_Object
    
    Move (hInput1) to haInput[0]
    Move (hInput2) to haInput[1]
    Move (hInput3) to haInput[2]
    
    Set ObjectArrayValue of hJson "objectArray" to haInput
    Get ObjectArrayValue of hJson "objectArray" to haHelper
    Get Value of haHelper[2] "me" to sHelper
    If (sHelper <> "input-3") Begin
        Showln "ObjectArrayValue check failed"
        Function_Return False
    End
    
    Get Serialize of hJson to sJSON
    If (sJSON <> '{"string":"my-string-value","number":123.45,"boolean":true,"array":["A","B","C"],"object":{"member":"ABC"},"objectArray":[{"me":"input-1"},{"me":"input-2"},{"me":"input-3"}]}') Begin
        Showln "Helper Function Serializing check failed"
        Function_Return False
    End
    
    Showln "Testing cJSONDictionary... OK"
    Function_Return True
End_Function