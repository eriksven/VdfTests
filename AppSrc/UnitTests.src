Use Windows.pkg

Use cApplication.pkg

Object oApplication is a cApplication
    Set pbPreserveEnvironment to False
    Set peHelpType to htHtmlHelp
    Set psAutoOpenWorkspace to ""
End_Object

Global_Variable Integer[] giaTestMethods

// HELPER FUNCTIONS

// Create a new string array with up to 10 members
Function CreateStringArray Global String a0 String a1 String a2 String a3 String a4 String a5 String a6 String a7 String a8 String a9 Returns String[]
    String[] sa
    Integer i
    Move num_arguments to i
    If (i > 0) Move a0 to sa[0]
    If (i > 1) Move a1 to sa[1]
    If (i > 2) Move a2 to sa[2]
    If (i > 3) Move a3 to sa[3]
    If (i > 4) Move a4 to sa[4]
    If (i > 5) Move a5 to sa[5]
    If (i > 6) Move a6 to sa[6]
    If (i > 7) Move a7 to sa[7]
    If (i > 8) Move a8 to sa[8]
    If (i > 9) Move a9 to sa[9]
    Function_Return sa
End_Function

// Create a new Handle array with up to 10 members
Function CreateHandleArray Global Handle a0 Handle a1 Handle a2 Handle a3 Handle a4 Handle a5 Handle a6 Handle a7 Handle a8 Handle a9 Returns Handle[]
    Handle[] ha
    Integer i
    Move num_arguments to i
    If (i > 0) Move a0 to ha[0]
    If (i > 1) Move a1 to ha[1]
    If (i > 2) Move a2 to ha[2]
    If (i > 3) Move a3 to ha[3]
    If (i > 4) Move a4 to ha[4]
    If (i > 5) Move a5 to ha[5]
    If (i > 6) Move a6 to ha[6]
    If (i > 7) Move a7 to ha[7]
    If (i > 8) Move a8 to ha[8]
    If (i > 9) Move a9 to ha[9]
    Function_Return ha
End_Function

// END HELPER FUNCTIONS

{ "Purpose" = "Replace this path with your own" }
#Replace MY_ERIKSVEN_PATH ..\..\..\eriksven

Use MY_ERIKSVEN_PATH\cHashTable\cHashTable.pkg
Use MY_ERIKSVEN_PATH\cDictionary\cScriptingDictionary.pkg
Use MY_ERIKSVEN_PATH\cRegex\cRegex.pkg
Use MY_ERIKSVEN_PATH\VdfWebTools\cJSONDictionary.pkg
Use MY_ERIKSVEN_PATH\VdfWebTools\cJSONParser.pkg
Use MY_ERIKSVEN_PATH\VdfWebTools\cWebClient.pkg
Use MY_ERIKSVEN_PATH\VdfWebTools\cJSONWebClient.pkg
Use MY_ERIKSVEN_PATH\cHashTable\cSummaryTable.pkg

Use cHashTable_tests.pkg
Move (get___Test_cHashTable) to giaTestMethods[SizeOfArray(giaTestMethods)]

Use cScriptingDictionary_tests.pkg
Move (get___Test_cScriptingDictionary) to giaTestMethods[SizeOfArray(giaTestMethods)]

Use cJSONParser_tests.pkg
Move (get___Test_cJSONParser) to giaTestMethods[SizeOfArray(giaTestMethods)]

Use cJSONDictionary_tests.pkg
Move (get___Test_cJSONDictionary) to giaTestMethods[SizeOfArray(giaTestMethods)]

Use cWebClient_tests.pkg
Move (get___Test_cWebClient) to giaTestMethods[SizeOfArray(giaTestMethods)]

Use cJSONWebClient_tests.pkg
Move (get___Test_cJSONWebClient) to giaTestMethods[SizeOfArray(giaTestMethods)]

Use cSummaryTable_tests.pkg
Move (get___Test_cSummaryTable) to giaTestMethods[SizeOfArray(giaTestMethods)]

// Add more tests...

Procedure RunUnitTests
    Integer i iMsg
    Boolean bAllOk bOk

    Move True to bAllOk
    
    Showln "Running Unit Tests..."
    
    For i from 0 to (SizeOfArray(giaTestMethods)-1)
        Move giaTestMethods[i] to iMsg
        
        Showln ""
        Get iMsg to bOk
        
        If (not(bOk)) Begin
            Move False to bAllOk    
        End
    Loop
    Showln ""
    
    Send Bell
    
    If (not(bAllOk)) Begin
        Send Stop_Box "Some classes did not pass the test" "eriksven.com Unit Tests"
    End
    Else Begin
        Showln "All OK (Closing window in 5 seconds...)"
        Sleep 5
    End
    
End_Procedure
Send RunUnitTests